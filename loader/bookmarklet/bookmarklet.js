module.exports = '(function () {\n  \'use strict\';\n\n  /*global $, main_html, style_css, toolbar_html, presenters, models*/\n\n  function $ (selector, el) {\n    if (!el) { el = document; }\n    return el.querySelector(selector);\n  }\n\n  function $_ (selector, el) {\n    if (!el) { el = document; }\n    return Array.prototype.slice.call(el.querySelectorAll(selector));\n  }\n\n  function append ( el_string, parent ) {\n    var div = document.createElement( \'div\' );\n    div.innerHTML = el_string;\n    var el = div.firstChild;\n    return parent.appendChild(el);\n  }\n\n  var style_css = \'iframe#dgw-frame{position:fixed;bottom:0;left:0;border:none;z-index:100000}.dgw-wand *{cursor:url(/public/images/wand.png),auto}.dgw-link{cursor:url(/public/images/wand_active.png),auto!important;display:inline-block;position:relative;padding:15px 10px 10px;margin:-15px -10px -10px}\';\n\n  // This stuff originates from the main config file\nvar config = {\n  provider_list: {\n    \'https://www.facebook.com\': \'Facebook\',\n    \'http://www.reddit.com\': \'Reddit\'\n  },\n  version: \'1\',\n  url: \'https://localhost:3700\'\n};\n\n  /* Riot 1.0.1, @license MIT, (c) 2014 Muut Inc + contributors */\n(function(e){\"use strict\";e.observable=function(e){var t={},n=[].slice;e.on=function(n,r){if(typeof r===\"function\"){n.replace(/[^\\s]+/g,function(e,n){(t[e]=t[e]||[]).push(r);r.typed=n>0})}return e};e.off=function(n,r){if(n==\"*\")t={};else if(r){var o=t[n];for(var i=0,u;u=o&&o[i];++i){if(u===r)o.splice(i,1)}}else{n.replace(/[^\\s]+/g,function(e){t[e]=[]})}return e};e.one=function(t,n){if(n)n.one=true;return e.on(t,n)};e.trigger=function(r){var o=n.call(arguments,1),i=t[r]||[];for(var u=0,f;f=i[u];++u){if(!f.busy){f.busy=true;f.apply(e,f.typed?[r].concat(o):o);if(f.one){i.splice(u,1);u--}f.busy=false}}return e};return e};var t={},n={\"\\\\\":\"\\\\\\\\\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\'\":\"\\\\\'\"},r={\"&\":\"&amp;\",\'\"\':\"&quot;\",\"<\":\"&lt;\",\">\":\"&gt;\"};function o(e,t){return e==undefined?\"\":(e+\"\").replace(/[&\\\"<>]/g,function(e){return r[e]})}e.render=function(e,r,i){if(i===true)i=o;e=e||\"\";return(t[e]=t[e]||new Function(\"_\",\"e\",\"return \'\"+e.replace(/[\\\\\\n\\r\']/g,function(e){return n[e]}).replace(/{\\s*([\\w\\.]+)\\s*}/g,\"\' + (e?e(_.$1,\'$1\'):_.$1||(_.$1==undefined?\'\':_.$1)) + \'\")+\"\'\"))(r,i)};if(typeof top!=\"object\")return;var i,u=e.observable({}),f=window.addEventListener,a=document;function c(e){e=e.type?location.hash:e;if(e!=i)u.trigger(\"pop\",e);i=e}if(f){f(\"popstate\",c,false);a.addEventListener(\"DOMContentLoaded\",c,false)}else{a.attachEvent(\"onreadystatechange\",function(){if(a.readyState===\"complete\")c(\"\")})}e.route=function(e){if(typeof e===\"function\")return u.on(\"pop\",e);if(history.pushState)history.pushState(0,0,e);c(e)}})(typeof top==\"object\"?window.riot={}:exports);\n\n  /*\n * classList.js: Cross-browser full element.classList implementation.\n * 2014-01-31\n *\n * By Eli Grey, http://eligrey.com\n * Public Domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\n\nif (\"document\" in self && !(\"classList\" in document.createElement(\"_\"))) {\n\n(function (view) {\n\n\"use strict\";\n\nif (!(\'Element\' in view)) return;\n\nvar\n    classListProp = \"classList\"\n  , protoProp = \"prototype\"\n  , elemCtrProto = view.Element[protoProp]\n  , objCtr = Object\n  , strTrim = String[protoProp].trim || function () {\n    return this.replace(/^\\s+|\\s+$/g, \"\");\n  }\n  , arrIndexOf = Array[protoProp].indexOf || function (item) {\n    var\n        i = 0\n      , len = this.length\n    ;\n    for (; i < len; i++) {\n      if (i in this && this[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  // Vendors: please allow content code to instantiate DOMExceptions\n  , DOMEx = function (type, message) {\n    this.name = type;\n    this.code = DOMException[type];\n    this.message = message;\n  }\n  , checkTokenAndGetIndex = function (classList, token) {\n    if (token === \"\") {\n      throw new DOMEx(\n          \"SYNTAX_ERR\"\n        , \"An invalid or illegal string was specified\"\n      );\n    }\n    if (/\\s/.test(token)) {\n      throw new DOMEx(\n          \"INVALID_CHARACTER_ERR\"\n        , \"String contains an invalid character\"\n      );\n    }\n    return arrIndexOf.call(classList, token);\n  }\n  , ClassList = function (elem) {\n    var\n        trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n      , classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n      , i = 0\n      , len = classes.length\n    ;\n    for (; i < len; i++) {\n      this.push(classes[i]);\n    }\n    this._updateClassName = function () {\n      elem.setAttribute(\"class\", this.toString());\n    };\n  }\n  , classListProto = ClassList[protoProp] = []\n  , classListGetter = function () {\n    return new ClassList(this);\n  }\n;\n// Most DOMException implementations don\'t allow calling DOMException\'s toString()\n// on non-DOMExceptions. Error\'s toString() is sufficient here.\nDOMEx[protoProp] = Error[protoProp];\nclassListProto.item = function (i) {\n  return this[i] || null;\n};\nclassListProto.contains = function (token) {\n  token += \"\";\n  return checkTokenAndGetIndex(this, token) !== -1;\n};\nclassListProto.add = function () {\n  var\n      tokens = arguments\n    , i = 0\n    , l = tokens.length\n    , token\n    , updated = false\n  ;\n  do {\n    token = tokens[i] + \"\";\n    if (checkTokenAndGetIndex(this, token) === -1) {\n      this.push(token);\n      updated = true;\n    }\n  }\n  while (++i < l);\n\n  if (updated) {\n    this._updateClassName();\n  }\n};\nclassListProto.remove = function () {\n  var\n      tokens = arguments\n    , i = 0\n    , l = tokens.length\n    , token\n    , updated = false\n  ;\n  do {\n    token = tokens[i] + \"\";\n    var index = checkTokenAndGetIndex(this, token);\n    if (index !== -1) {\n      this.splice(index, 1);\n      updated = true;\n    }\n  }\n  while (++i < l);\n\n  if (updated) {\n    this._updateClassName();\n  }\n};\nclassListProto.toggle = function (token, force) {\n  token += \"\";\n\n  var\n      result = this.contains(token)\n    , method = result ?\n      force !== true && \"remove\"\n    :\n      force !== false && \"add\"\n  ;\n\n  if (method) {\n    this[method](token);\n  }\n\n  return !result;\n};\nclassListProto.toString = function () {\n  return this.join(\" \");\n};\n\nif (objCtr.defineProperty) {\n  var classListPropDesc = {\n      get: classListGetter\n    , enumerable: true\n    , configurable: true\n  };\n  try {\n    objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n  } catch (ex) { // IE 8 doesn\'t support enumerable:true\n    if (ex.number === -0x7FF5EC54) {\n      classListPropDesc.enumerable = false;\n      objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n    }\n  }\n} else if (objCtr[protoProp].__defineGetter__) {\n  elemCtrProto.__defineGetter__(classListProp, classListGetter);\n}\n\n}(self));\n\n}\n\n  \'use strict\';\n\n/*global $_ */\n\nvar scrape_utils = {\n\n  link_finders: {\n    Facebook: function () {\n      var attrs_a = $_(\'a\').filter(function (el) {\n        var attr = el.getAttribute(\'data-hovercard\');\n        if (attr && attr.match(/hovercard\\/user.php/)) {\n          if (!el.children.length) {\n            return true;\n          }\n          return false;\n        }\n        return false;\n      });\n\n      var attrs_b = $_(\'.UFICommentActorName\');\n\n      return attrs_a.concat(attrs_b);\n    },\n\n    Reddit: function () {\n      return $_(\'a\').filter(function (el) {\n        var href = el.getAttribute(\'href\');\n        if (href && href.match(/reddit\\.com\\/user\\//)) {\n          if (!el.children.length) {\n            return true;\n          }\n          return false;\n        }\n        return false;\n      });\n    }\n  },\n\n  // ^([^\\/]*)\n\n  uniqid_finders: {\n    Facebook: function (that) {\n      var uniqid = that.getAttribute(\'data-hovercard\').match(/id=(\\d*).*$/)[1];\n      var display_name = that.textContent;\n      return {\n        uniqid: uniqid,\n        display_name: display_name\n      };\n    },\n\n    Reddit: function (that) {\n      var uniqid = that.getAttribute(\'href\').match(/.*\\/(.*)/)[1];\n      var display_name = that.textContent;\n      return {\n        uniqid: uniqid,\n        display_name: display_name\n      };\n    }\n  },\n\n  account_finders: {\n    Facebook: function () {\n      return selectAttrRegex(\'a.fbxWelcomeBoxName\', \'href\', \'.*?id=(.*?)(?:\\&|$)\') ||\n             selectAttrRegex(\'a.fbxWelcomeBoxName\', \'href\', \'^(?:.*)\\/([^&?/]*)\') ||\n             selectAttrRegex(\'a.navLink[title=\"Timeline\"]\', \'href\', \'.*?id=(.*?)(?:\\&|$)\') ||\n             selectAttrRegex(\'a.navLink[title=\"Timeline\"]\', \'href\', \'^(?:.*)\\/([^&?/]*)\');\n    },\n\n    Reddit: function () {\n      return selectAttrRegex(\'span.user [href*=\"reddit.com/user\"]\', \'href\', \'user\\/(.*?)(\\W|\\/|$)\');\n    }\n  }\n};\n\nfunction selectAttrRegex (select, attr, regex) {\n  var selected = document.querySelector(select)  || document.body;\n  var attributed = selected.getAttribute(attr) || \'\';\n  var regexed = attributed.match(new RegExp(regex)) || [null, null];\n\n  return regexed[1];\n}\n\n\n  \'use strict\';\n\n/*global $, iframe, app, riot, VERSION, PROVIDER*/\n\nfunction App () {\n  var self = riot.observable(this);\n  self.provider = null;\n\n  self.createTip = function (user_info) {\n    iframe.source.postMessage(JSON.stringify({\n      method: \'create_tip\',\n      data: {\n        uniqid: user_info.uniqid,\n        display_name: user_info.display_name\n      }\n    }), config.url);\n  };\n}\n\n\nfunction Iframe () {\n  var self = riot.observable(this);\n\n  self.listen = function (event) {\n    console.log(\'loader receives\', event)\n    if (event.origin === config.url) { // Check if it\'s even legit\n      var message = JSON.parse(event.data);\n\n      switch (message.method) {\n        case \'call\':\n          self.source = event.source;\n          iframe.source.postMessage(JSON.stringify({\n            method: \'response\',\n            data: {\n              version: config.version,\n              uniqid: scrape_utils.account_finders[app.provider]()\n            }\n          }), config.url);\n          break;\n        case \'size\':\n          self.trigger(\'size\', message.data);\n          break;\n        case \'tipping\':\n          app.trigger(\'tipping\', message.data);\n          break;\n        case \'destroy\':\n          app.trigger(\'destroy\');\n          break;\n      }\n    }\n  }\n}\n\n  \'use strict\';\n\n/*global $, templates, scrape_utils, app, iframe, append*/\n\nfunction _app (container) {\n  _iframe(container);\n  var links;\n\n  window.addEventListener(\'message\', iframe.listen, false);\n\n  app.on(\'tipping\', function (bool) {\n    if (bool) enterTipping();\n    else exitTipping();\n  });\n\n  function enterTipping() {\n    container.classList.add(\'dgw-wand\');\n\n    links = scrape_utils.link_finders[app.provider]();\n\n    links.forEach(function (el) {\n      el.classList.add(\'dgw-link\');\n      el.addEventListener(\'click\', createTip);\n    });\n\n    container.addEventListener(\'click\', exitTipping);\n  }\n\n  function createTip (e) {\n    e.preventDefault();\n    app.createTip(scrape_utils.uniqid_finders[app.provider](this));\n  }\n\n  function exitTipping() {\n    container.classList.remove(\'dgw-wand\');\n    container.removeEventListener(\'click\', exitTipping);\n\n    links.forEach(function (el) {\n      el.classList.remove(\'dgw-link\');\n      el.removeEventListener(\'click\', createTip);\n    });\n  }\n\n  app.on(\'destroy\', function () {\n    var dgw_frame = $(\'#dgw-frame\');\n    if (dgw_frame) dgw_frame.remove();\n\n    var dgw_styles = $(\'#dgw-styles\');\n    if (dgw_styles) dgw_styles.remove();\n\n    window.removeEventListener(\'message\', iframe.listen);\n  });\n\n}\n\n\n\nfunction _iframe (container) {\n  var contents = append(\'<iframe id=\"dgw-frame\" width=\"100%\"></iframe>\', container);\n  // var $contents = $(\'<iframe id=\"dgw-frame\"></iframe>\').appendTo($container);\n\n  iframe.on(\'size\', function (dimensions) {\n    contents.setAttribute(\'width\', dimensions.width);\n    contents.setAttribute(\'height\', dimensions.height);\n  });\n\n  iframe.on(\'navigate\', function (url) {\n    contents.setAttribute(\'src\', url);\n  });\n\n  iframe.source = contents.contentWindow;\n}\n\n\n\n  var URL = \'https://localhost:3700\';\n  var VERSION = \'1\'; // If this is not consistent with the server\'s version, the user will get an update modal!\n\n  var dgw_frame = $(\'#dgw-frame\');\n  if (dgw_frame) {\n    dgw_frame.remove(); // remove app if exists\n  }\n\n  append(\'<style id=\"dgw-styles\">\' + style_css + \'</style>\', $(\'body\')); // add style to head\n\n  var app = new App();\n  var iframe = new Iframe();\n\n  app.provider = config.provider_list[window.location.origin];\n\n  _app($(\'body\')); // Presenters are denoted with _\n\n  iframe.trigger(\'navigate\', URL + \'/iframe\');\n})();';