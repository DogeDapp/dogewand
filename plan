plan


User
  balance

Account
  uniqid
  provider
  name
  user_id

Tip
  amount
  tipper_id
  tippee_id
  state
  hash (maybe?)

User making scenarios:
  Fresh sign up

Account making scenarios:
  New tip
  Linking account


Create user:
  Create user with 0 balance
  Find or create account with provider and uniqid and name from auth. Replace name if account
  already exists.

Auth:
  insert or update and select account
  insert user and update account with user_id
  use account.user_id to select user and join all accounts

  Case 1- user is not logged in, account exists

  Case 2- user is not logged in, account does not exist

  Case 3- user is not logged in, account exists, is not associated with user




Merge Users:
  Get provider and uniqid from auth
  find account, user
  move all funds from user to signed in user
  change all accounts with user_id to signed in user id

Create tip:
  Look for account with scraped provider and uniqid. If none found make one.
  Use above for tippee_id.
  tipper_id of first account from current user that matches provider (can offer choice later)
  state created
  insert tip
  return uuid to use in url

Resolve tip:
  we have:
    current user_id
    tip info:
      tipper_id
      tippee_id

  get tipper_id and tippee_id accounts, check if they have user_id of current user

  check if user id matches either tippee or tipper account- error if not
  set state based on this- resolve or claim
  move amount from escrow to user




Merging users:

User already has account with other provider(s). They receive a tip on a new provider, and are not
signed in to that provider. They claim the tip using the new user resolve flow. A new account is created.

Option 1:

Do you already have a dogewand account? Click here to merge accounts.
Need both users. NOTE: profile info is effectively same as user object.
Use passport authorize, then use profile info to look up additional account.
When you have the additional account, choose which direction to merge in.

Get balance of merge account. Move all funds from merge account to the other account.
Add auth info from merge account into other account. Delete merge account.


Want to move *to* otheraccount:
When one has accepted a tip on a new provider, creating superflous account, which one is logged into
at the time.

Want to move *from* otheraccount:
When one would like to start tipping on a new provider and is logged into the account one would like
to tip with.


Is there anything bad that happens if one merges a whole array of providers and not just one?

- Not that I can think of right now


Option 2:




Iframe comms flow:

option 1

* Loader opens iframe
* Saves reference to iframe
* Sends version to iframe
* iframe checks version, maybe pops update modal

option 2

* Loader opens Iframe
* Iframe sends hello message
* Loader saves reference to iframe
* Sends version to iframe
* iframe checks version, maybe pops update modal

TODO:

* API tests
* Automatically update balances from deposits
* Deal with remaining login jank
*


Putting whole thing in iframe-

  * Load zepto twice- fuck it (maybe use native dom stuff??)
  * Channel.js framework if needed? probably not right now
  * Just seperate the shit out, put dom scraping stuff outside.

  * Seperate lib file in iframe- like normal website
  * Still concatting everything outside

  Outside script functionality:
    * Load and resize iframe
    * Page scraping functionality
    * Talk to stuff inside
    * Does it need to even do any ajax???
    * Be as small as possible

  Iframe script functionality:
    * Send resize messages
    * Pop modals
    * Display forms
    * Send ajax or possibly just form submits?
    * MVP for toolbar, balance. later, tips lists

  Preprocessing needed:

    Outside script:
      * Concat lib stuff
      * Minify
      * Incremental not needed? (unless there is html or smthing?)

    Iframe script:
      * Same stuff from before- incremental etc.
      * Put css straight in page, process seperately

How to show tip confirmation

1. Send close postmessage on submit

  Pros
    * Simplest

  Cons
    * Will need to reload tips in extension, likely race condition


2. Send post with js in iframe, send closer postmessage with data to extension

  Pros
    * Most elegant

  Cons
    * Need to write xmlhhtp requests or load zepto or other lib redundantly


3. Redirect to iframe closer page, load tip confirmation in extension upon close

  Pros
    * Simple
    * Eliminates race condition by controlling timing

  Cons
    * Need to make another request


4. Submit form normally, redirect to closer page with templated-in data.

  Pros
    * Simple to build

  Cons
    * Weird


5. Submit form normally, reload page with flash message with tip data for extension.

  Pros
    * Existing solutions
    * Flash messages will be good to have for other stuff?

  Cons
    * Old school?
    * Reload flicker
    * Need to learn new module


tip on the frontend

get username for url
or get username pasted

make tip call

display error or
display tip link

update balance and tip lists



get api/user
  current logged in user data

get api/user/tips
  get current user's tips

post api/tip/create_tip
  create tip

post api/tip/resolve_tip
  resolve tip to current user



get tip/:_id
  view tip page

get account
  view account of signed in user

get extension/*
  pages formatted for an iframe in the extension




alternate db:

  Account:
    user_id
    wallet_id
    provider
    identifier

  User:
    email

  Tip:
    from_user
    to_user
    amount
    hash


POST dogewand.com/api/tip?id=jureto&amount=30&provider=face

generate tip
  receive identifier of tipee and amount
  check for user with id_info
    if no user: make new user with identifier
      gen wallet id
      new entry in db
    call jae: move to wallet
      if insufficient balance: send back to extension
      if success:
        new tip record


extension auth:



todo:
  X get gulp making js with templates
  X login
  X bookmarklet dom stuff
  X bookmarklet loading
  X bookmarklet comms
  bookmarklet interface
  test db api
  tip page
  talk to jae api



Bookmarklet interface:
  popup "click on someone's profile link to tip them with the dogewand"
  link for explanatory image
  close button
  on click on profile link:
    pop amount dialog
    enter amount
    click tip button:
      "you have tipped x y dogecoins. if they do not claim their tip, you can cancel it in 1 week. paste this message into a comment to let them know about it"



Database Schema:

user:
  auth stuff etc
  jae creds
tips:
  amount
  from_user
  to_user


API calls:

new user
  blah blah auth
sign in
  blah blah auth
sign out
  blah blah auth


generate tip
  receive id_info of tipee and amount
  check for user with id_info
    if no user: make new user with id_info
      gen wallet id
      new entry in db
    call jae: move to wallet
      if insufficient balance: send back to extension
      if success:
        add tip_page record
        send url back to extension

tip page
  parse url for tip id
  get tip record from db
  gen tip page with tip amount, user etc.

view balance
  call jae: get wallet balance



possible states upon viewing tip page
  not signed in
    "x has tipped u y doges, click here to sign in"
  signed in
    "x has tipped u y doges"